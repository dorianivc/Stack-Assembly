/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import javax.swing.JOptionPane;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;

/**
 *
 * @author Monica
 */
public class View extends javax.swing.JFrame {

    /**
     * Creates new form View
     */
    public View() {
        initComponents();
        
    }
    public void cargar(){
        this.jTableModel.setModel(new stackTableModel(controller.getStack()));
        this.jTextFieldAX.setText(toUpperCase(Integer.toHexString(this.model.ax)));
        this.jTextFieldBX.setText(toUpperCase(Integer.toHexString(this.model.bx)));
        this.jTextFieldCX.setText(toUpperCase(Integer.toHexString(this.model.cx)));
        this.jTextFieldDX.setText(toUpperCase(Integer.toHexString(this.model.dx)));
        this.jTextFieldStackPointer.setText(toUpperCase(Integer.toHexString(this.model.stack_pointer)));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableModel = new javax.swing.JTable();
        jLabelSack = new javax.swing.JLabel();
        JLabelAX = new javax.swing.JLabel();
        JLabelBD = new javax.swing.JLabel();
        JLabelcx = new javax.swing.JLabel();
        JLabelDX = new javax.swing.JLabel();
        jTextFieldAX = new javax.swing.JTextField();
        jTextFieldBX = new javax.swing.JTextField();
        jTextFieldCX = new javax.swing.JTextField();
        jTextFieldDX = new javax.swing.JTextField();
        JLabelMOV = new javax.swing.JLabel();
        jComboBoxMOVReg = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldMOV = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonMOVReg = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxPushReg = new javax.swing.JComboBox<>();
        jButtonPushReg = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldPush = new javax.swing.JTextField();
        jButtonPushArb = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxPopReg = new javax.swing.JComboBox<>();
        jButtonPopReg = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldPopArb = new javax.swing.JTextField();
        jButtonPopArbitrario = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldStackPointer = new javax.swing.JTextField();
        jLabelStackPiointer = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PUSH AND POP ASSEMBLY 8086/8088");

        jTableModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableModel);

        jLabelSack.setText("Stack");

        JLabelAX.setText("AX:");

        JLabelBD.setText("BX:");

        JLabelcx.setText("CX");

        JLabelDX.setText("DX:");

        jTextFieldAX.setEditable(false);

        jTextFieldBX.setEditable(false);

        jTextFieldCX.setEditable(false);
        jTextFieldCX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCXActionPerformed(evt);
            }
        });

        jTextFieldDX.setEditable(false);
        jTextFieldDX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDXActionPerformed(evt);
            }
        });

        JLabelMOV.setText("MOV");

        jComboBoxMOVReg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AX", "BX", "CX", "DX" }));
        jComboBoxMOVReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMOVRegActionPerformed(evt);
            }
        });

        jLabel1.setText(",");

        jLabel2.setText("MOV A REGISTROS(d,b,h)");

        jButtonMOVReg.setText("Ejecutar");
        jButtonMOVReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMOVRegActionPerformed(evt);
            }
        });

        jLabel3.setText("PUSH DESDE REGISTRO:");

        jLabel4.setText("PUSH");

        jComboBoxPushReg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AX", "BX", "CX", "DX" }));
        jComboBoxPushReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPushRegActionPerformed(evt);
            }
        });

        jButtonPushReg.setText("Ejecutar");
        jButtonPushReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPushRegActionPerformed(evt);
            }
        });

        jLabel5.setText("PUSH ARBITRARIO(d,b,h): ");

        jLabel6.setText("PUSH");

        jButtonPushArb.setText("Ejecutar");
        jButtonPushArb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPushArbActionPerformed(evt);
            }
        });

        jLabel7.setText("POP A REGISTRO:");

        jLabel8.setText("POP");

        jComboBoxPopReg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AX", "BX", "CX", "DX" }));
        jComboBoxPopReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPopRegActionPerformed(evt);
            }
        });

        jButtonPopReg.setText("Ejecutar");
        jButtonPopReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPopRegActionPerformed(evt);
            }
        });

        jLabel9.setText("POP ARBITRARIO");

        jTextFieldPopArb.setEditable(false);

        jButtonPopArbitrario.setText("Ejecutar");
        jButtonPopArbitrario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPopArbitrarioActionPerformed(evt);
            }
        });

        jLabel10.setText("POP:");

        jLabelStackPiointer.setText("Stack Pointer:");

        jLabel11.setText("H");

        jLabel12.setText("H");

        jLabel13.setText("H");

        jLabel14.setText("H");

        jLabel15.setText("H");

        jLabel16.setText("H");

        jMenu2.setText("Sobre");

        jMenuItem1.setText("Acerca de");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabelStackPiointer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldStackPointer, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JLabelBD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JLabelcx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JLabelDX, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(32, 32, 32)
                                            .addComponent(JLabelMOV))
                                        .addComponent(JLabelAX, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(139, 139, 139)
                                        .addComponent(jLabel10)))
                                .addGap(5, 5, 5))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelSack)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxMOVReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMOV, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonMOVReg))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxPushReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonPushReg))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxPopReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonPopReg))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldPopArb, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonPopArbitrario))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldCX, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldDX, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldBX, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldAX, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jTextFieldPush, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonPushArb)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelAX)
                    .addComponent(jLabelSack)
                    .addComponent(jTextFieldAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldStackPointer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelStackPiointer)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLabelBD)
                            .addComponent(jTextFieldBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLabelcx)
                            .addComponent(jTextFieldCX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLabelDX)
                            .addComponent(jTextFieldDX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLabelMOV)
                            .addComponent(jComboBoxMOVReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldMOV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jButtonMOVReg))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jComboBoxPushReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPushReg))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldPush, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPushArb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jComboBoxPopReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPopReg))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTextFieldPopArb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPopArbitrario)
                            .addComponent(jLabel10)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(135, 135, 135))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCXActionPerformed

    private void jTextFieldDXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDXActionPerformed

    private void jComboBoxMOVRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMOVRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxMOVRegActionPerformed

    private void jComboBoxPushRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPushRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPushRegActionPerformed

    private void jButtonPushArbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPushArbActionPerformed
        String valor=this.jTextFieldPush.getText();
        if(valor.length()>0){
         String nuevoValor= convertirValor(valor);
         if(!"ERROR".equals(nuevoValor)&&this.model.stack_pointer>0){
             Integer val=null;
             try{
                 val=Integer.parseInt(this.convertirValor(valor));
             }catch(Exception se){
                 JOptionPane.showMessageDialog(null, "Excepcion cambiando valores" , "DATOS INVALIDOS",0);
             }
             this.model.stack.add(val);
             this.model.stack_pointer-=2;
             controller.cargar();
         }
        }
        
    }//GEN-LAST:event_jButtonPushArbActionPerformed

    private void jComboBoxPopRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPopRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPopRegActionPerformed

    private void jButtonPopRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPopRegActionPerformed
        if(!model.stack.isEmpty()){
            Integer valor= model.stack.get(model.stack.size()-1);
            model.stack.remove(model.stack.size()-1);
            String registro= (String) this.jComboBoxPopReg.getSelectedItem();
            switch(registro){
            case "AX": this.model.ax=valor ;break;
            case "BX":this.model.bx=valor ;break;
            case "CX": this.model.cx=valor;break;
            case"DX": this.model.dx=valor; break;
             }
             this.model.stack_pointer+=2;
            
        }
         controller.cargar();
    }//GEN-LAST:event_jButtonPopRegActionPerformed

    private void jButtonPopArbitrarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPopArbitrarioActionPerformed
      if(!model.stack.isEmpty()){
            Integer valor= model.stack.get(model.stack.size()-1);
            model.stack.remove(model.stack.size()-1);
            this.jTextFieldPopArb.setText(Integer.toHexString(valor));
            this.model.stack_pointer+=2;
            
        }
         controller.cargar();
    }//GEN-LAST:event_jButtonPopArbitrarioActionPerformed

    private void jButtonMOVRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMOVRegActionPerformed
       String registro= (String) this.jComboBoxMOVReg.getSelectedItem();
       String valor= this.jTextFieldMOV.getText();
       if(valor.length()>0){
         String nuevoValor= convertirValor(valor);
         if(!"ERROR".equals(nuevoValor)){
             Integer val=null;
             try{
                 val=Integer.parseInt(this.convertirValor(valor));
             }catch(Exception se){
                 JOptionPane.showMessageDialog(null, "Excepcion cambiando valores" , "DATOS INVALIDOS",0);
             }
             if(val!=null){
                 switch(registro){
           case "AX": this.model.ax=Integer.parseInt(this.convertirValor(valor));break;
           case "BX": this.model.bx=Integer.parseInt(this.convertirValor(valor));break;
           case "CX": this.model.cx=Integer.parseInt(this.convertirValor(valor));break;
           case"DX": this.model.dx=Integer.parseInt(this.convertirValor(valor)); break;
             }
            
         }
         controller.cargar();
           
       }
       }
       
    }//GEN-LAST:event_jButtonMOVRegActionPerformed

    private void jButtonPushRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPushRegActionPerformed
        String registro=(String) this.jComboBoxPushReg.getSelectedItem();
        if(this.model.stack_pointer>0){
            switch(registro){
           case "AX": this.model.stack.add(this.model.ax);break;
           case "BX": this.model.stack.add(this.model.bx);break;
           case "CX": this.model.stack.add(this.model.cx);break;
           case"DX": this.model.stack.add(this.model.dx); break;
             }
             this.model.stack_pointer-=2;
        }
        controller.cargar();
    }//GEN-LAST:event_jButtonPushRegActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JOptionPane.showMessageDialog(null, "Universidad Nacional, Costa Rica \nProgramado por Dorian Vallecillo Calderon - 604560223  \ndorianivc1@gmail.com \nArquitectura de Computadoras \nProfesor: Majid Bayani Abbasy \nIIC-2019", "INFORMACION DEL PROGRAMADOR",JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    	public static Integer decimalbinario(Integer num) {

		Integer residuo = 0, potencia = 0, resultado = 0;

		do {

			residuo = num % 2;

			num = num / 2;

			resultado  += residuo * (int)Math.pow(10, potencia);

			potencia++;

		}while(num>0);

		return resultado;

	}
        
        Boolean numerico(int i){
        return i>=0&&i<=9;
        }
   public Integer binarioDecimal(Integer number){
        int decimal = 0;

        int binary = number;

        int power = 0;

 

        while (binary != 0) {

            int lastDigit = binary % 10;

            decimal += lastDigit * Math.pow(2, power);

            power++;

            binary = binary / 10;

        }

        return decimal;
    }
    public String convertirValor(String valor){
        char simbolo=valor.charAt(valor.length()-1);
         char simboloPrev=' ';
        if(valor.length()>=2){
           simboloPrev=valor.charAt(valor.length()-2);
        }
        
        System.out.println("Simbolo: "+simbolo);
        if(simbolo=='h'||simbolo=='H'){
        String hexadecimal;
        hexadecimal = valor.substring(0, valor.length()-1);
        Integer val=null;
        try{
            val=Integer.parseUnsignedInt(hexadecimal, 16);
        }catch(Exception se){
                 JOptionPane.showMessageDialog(null, "Excepcion cambiando valores" , "DATOS INVALIDOS",0);
            }
        if(val!=null){
            System.out.println("h");
            System.out.println(val);
         return val.toString();
        }else{
            return "0";
        }
            
         
        }
        else if(simbolo=='d'||simbolo=='D'){
            if(!numerico(Character.getNumericValue(simboloPrev))){
            JOptionPane.showMessageDialog(null, "Excepcion leyendo valores" , "DATOS INVALIDOS",0);
            return "ERORR";
            
        }else{
                
            System.out.println("d");
            System.out.println(valor.substring(0, valor.length()-1));
            
            return valor.substring(0, valor.length()-1);
            }
        }
        else if(simbolo=='b'||simbolo=='B'){
             if(!numerico(Character.getNumericValue(simboloPrev))){
            JOptionPane.showMessageDialog(null, "Excepcion leyendo valores" , "DATOS INVALIDOS",0);
            return "ERORR";
            
        }else{
            
            String valorcito=valor.substring(0, valor.length()-1);
            for(int i=0;i<valorcito.length();i++){
                
                if(Character.getNumericValue(valorcito.charAt(i))==1||Character.getNumericValue(valorcito.charAt(i))==0){
                    int c=0;
                }else{
                    JOptionPane.showMessageDialog(null, "DIGITE SOLO UNOS Y CEROS" , "DATOS INVALIDOS",0);
                    
                    return "ERROR";
                }
            }
            Integer bin=null;
            try{
                 bin=this.binarioDecimal(Integer.parseInt(valorcito));
            }catch(Exception se){
                 JOptionPane.showMessageDialog(null, "Excepcion cambiando valores" , "DATOS INVALIDOS",0);
            }
            if(bin!=null){
                System.out.println("B");
            return bin.toString();
            }else{
                return "0";
            }
             }
            
            
        }else if(numerico(Character.getNumericValue(simbolo))){
            System.out.println("#");
            return valor;
        } else if(!numerico(Character.getNumericValue(simbolo))){
             JOptionPane.showMessageDialog(null, "Ha introducido un dato invalido" , "DATOS INVALIDOS",0);
             return "ERROR";
        }
        return valor;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelAX;
    private javax.swing.JLabel JLabelBD;
    private javax.swing.JLabel JLabelDX;
    private javax.swing.JLabel JLabelMOV;
    private javax.swing.JLabel JLabelcx;
    private javax.swing.JButton jButtonMOVReg;
    private javax.swing.JButton jButtonPopArbitrario;
    private javax.swing.JButton jButtonPopReg;
    private javax.swing.JButton jButtonPushArb;
    private javax.swing.JButton jButtonPushReg;
    private javax.swing.JComboBox<String> jComboBoxMOVReg;
    private javax.swing.JComboBox<String> jComboBoxPopReg;
    private javax.swing.JComboBox<String> jComboBoxPushReg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelSack;
    private javax.swing.JLabel jLabelStackPiointer;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableModel;
    private javax.swing.JTextField jTextFieldAX;
    private javax.swing.JTextField jTextFieldBX;
    private javax.swing.JTextField jTextFieldCX;
    private javax.swing.JTextField jTextFieldDX;
    private javax.swing.JTextField jTextFieldMOV;
    private javax.swing.JTextField jTextFieldPopArb;
    private javax.swing.JTextField jTextFieldPush;
    private javax.swing.JTextField jTextFieldStackPointer;
    // End of variables declaration//GEN-END:variables
    Model model;
    Controller controller;

    public Model getModel() {
        return model;
    }

    public void setModel(Model model) {
        this.model = model;
    }

    public Controller getController() {
        return controller;
    }

    public void setController(Controller controller) {
        this.controller = controller;
    }
}
